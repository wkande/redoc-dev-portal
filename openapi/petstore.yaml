openapi: 3.0.3
servers:
  - url: '//petstore.swagger.io/v2'
info:
  description: >-
    You placed your server equipment in our Datacenter under our care. We thank you and take this 
    responsiblity seriously. Our APIs will help you monitor your equipment and us: CloudUla.
     
    CloudUla provides a set of APIs to access Datacenter stats, metrics and other important 
    information about your CloudUla Datacenter managed equipment.  You can find out more about
    CloudUla at [http://cloudula.io](http://cloudula.io).  
     
    To execute CloudUla APIs you will need your API Key for our Sandbox or Production 
    environments. Your can find your API Keys in your 
    <a href="javascript:alert('Imagine we just sent you to your account settings.')">
    Account Settings</a>.
     
    Please use the fictitious key <b>DEMO_KEY_FOR_ME</b> that was mentioned in 
    the Authentication section.
  version: 1.0.0
  title: API
  termsOfService: 'https://cloudula.io/terms/'
  contact:
    name: Support Team
    email: support@cloudula.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Servers <b>3</b>
    description: Everything about your Servers
    externalDocs:
      description: Learn more about CloudUla
      url: 'https://www.cloudula.io'
paths:
  /server:
    post:
      tags:
        - Servers
      summary: Add a new server
      description: >-
        Adds a server to the list of servers you wish to gather information about. 
        The server must physically exist in the CloudUla Datacenter. When staff at CloudUla 
        physically adds a server to the Datacenter the server will be added to your list of 
        servers for you by default. This POST may be neccessary should you DELETE the server 
        and wish to add it back in.
         
        An ID will be assigned to the server by this endpoint.
      operationId: addPet
      parameters:
        - name: api_key
          in: header
          required: true
          description: Try > DEMO_KEY_FOR_ME
          schema:
            type: string
      responses:
        '200':
          description: OK - The server was added
        '401':
          description: Invalid API Key - Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error - Not able to determine the exact error
      requestBody:
        $ref: '#/components/requestBodies/Pet'
    put:
      tags:
        - Servers
      summary: Update an existing pet
      description: ''
      operationId: updatePet
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - cloudula_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        $ref: '#/components/requestBodies/Pet'
  /pet/findByStatus:
    get:
      tags:
        - Servers
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - pending
                - sold
              default: available
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
      security:
        - cloudula_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/findByTags:
    get:
      tags:
        - Servers
      summary: Finds Pets by tags
      description: >-
        Muliple tags can be provided with comma separated strings. Use tag1,
        tag2, tag3 for testing.
      operationId: findPetsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          $ref: "#/components/responses/PetResponse"
        '400':
          description: Invalid tag value
      security:
        - cloudula_auth:
            - 'write:pets'
            - 'read:pets'
      deprecated: true
  /pet/{petId}:
    get:
      tags:
        - Servers
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
    post:
      tags:
        - Servers
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input
      security:
        - cloudula_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: Updated name of the pet
                  type: string
                status:
                  description: Updated status of the pet
                  type: string
    delete:
      tags:
        - Servers
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - cloudula_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/{petId}/uploadImage:
    post:
      tags:
        - Servers
      summary: uploads an image
      description: ''
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - cloudula_auth:
            - 'write:pets'
            - 'read:pets'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                additionalMetadata:
                  description: Additional data to pass to server
                  type: string
                file:
                  description: file to upload
                  type: string
                  format: binary
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  responses:
    PetResponse:
      description: successful operation
      content:
        #application/xml:
        #  schema:
        #    type: array
        #    items:
        #      $ref: '#/components/schemas/Pet'
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Pet'
  requestBodies:
    #UserArray:
    #  content:
    #    application/json:
    #      schema:
    #        type: array
    #        items:
    #          $ref: '#/components/schemas/User'
    #  description: List of user object
    #  required: true
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        #application/xml:
        #  schema:
        #    $ref: '#/components/schemas/Pet'
      description: Server object to add to your list of servers.
      required: true
  securitySchemes:
    cloudula_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    Pet:
      type: object
      required:
        - name
        - photoUrls
      properties:
        #id:
        #  type: integer
        #  format: int64
        #category:
        #  $ref: '#/components/schemas/Category'
        name:
          type: string
          example: starship-001
        status:
          type: string
          description: status of the server
          enum:
            - start
            - shutdown
            - maintentance
      xml:
        name: Pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
